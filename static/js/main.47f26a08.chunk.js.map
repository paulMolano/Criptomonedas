{"version":3,"sources":["hooks/useMoneda.js","hooks/useCriptomoneda.js","Components/Error.js","Components/Formulario.js","cryptomonedas.png","Components/Cotizacion.js","Components/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["Label","styled","label","Select","select","useMoneda","stateInicial","opciones","useState","state","actualizarState","onChange","e","target","value","map","opcion","codigo","nombre","useCriptomoneda","CoinInfo","Name","FullName","Id","MensajeError","p","Error","mensaje","Boton","input","Formulario","guardarMoneda","guardarCriptomoneda","listacripto","guardarCriptomonedas","error","guardarError","moneda","SelectMonedas","criptomoneda","SelectCripto","useEffect","consultarAPI","a","axios","get","resultado","data","Data","onSubmit","preventDefault","type","ResultadoDiv","div","Info","Precio","Cotizacion","Object","keys","length","PRICE","HIGHDAY","LOWDAY","CHANGEPCT24HOUR","LASTUPDATE","Spinner","class","Contenedor","Imagen","img","Heading","h1","App","guardarResultado","cargando","guardarCargando","cotizarCriptomoneda","url","setTimeout","DISPLAY","componente","src","imagen","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47f26a08.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst Label = styled.label`\r\n  font-family: \"Bebas Neue\", cursive;\r\n  color: #fff;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  font-size: 2.4rem;\r\n  margin-top: 2rem;\r\n  display: block;\r\n`;\r\n\r\nconst Select = styled.select`\r\n  width: 100%;\r\n  display: block;\r\n  padding: 1rem;\r\n  -webkit-appearance: none;\r\n  border-radius: 10px;\r\n  border: none;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nconst useMoneda = (label, stateInicial, opciones) => {\r\n  const [state, actualizarState] = useState(stateInicial);\r\n\r\n  const Seleccionar = () => (\r\n    <>\r\n      <Label>{label}</Label>\r\n      <Select onChange={(e) => actualizarState(e.target.value)} value={state}>\r\n        <option value=\"\">-- Seleccione --</option>\r\n        {opciones.map((opcion) => (\r\n          <option key={opcion.codigo} value={opcion.codigo}>\r\n            {opcion.nombre}\r\n          </option>\r\n        ))}\r\n      </Select>\r\n    </>\r\n  );\r\n\r\n  return [state, Seleccionar, actualizarState];\r\n};\r\n\r\nexport default useMoneda;\r\n","import { useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst Label = styled.label`\r\n  font-family: \"Bebas Neue\", cursive;\r\n  color: #fff;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  font-size: 2.4rem;\r\n  margin-top: 2rem;\r\n  display: block;\r\n`;\r\n\r\nconst Select = styled.select`\r\n  width: 100%;\r\n  display: block;\r\n  padding: 1rem;\r\n  -webkit-appearance: none;\r\n  border-radius: 10px;\r\n  border: none;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nconst useCriptomoneda = (label, stateInicial, opciones) => {\r\n  const [state, actualizarState] = useState(stateInicial);\r\n\r\n  const SelectCripto = () => (\r\n    <>\r\n      <Label>{label}</Label>\r\n      <Select onChange={(e) => actualizarState(e.target.value)} value={state}>\r\n        <option value=\"\">-- Seleccione --</option>\r\n        {opciones.map((opcion) => (\r\n          <option key={opcion.CoinInfo.Id} value={opcion.CoinInfo.Name}>\r\n            {opcion.CoinInfo.FullName}\r\n          </option>\r\n        ))}\r\n      </Select>\r\n    </>\r\n  );\r\n\r\n  return [state, SelectCripto, actualizarState];\r\n};\r\n\r\nexport default useCriptomoneda;\r\n","import styled from \"@emotion/styled\";\r\n\r\nconst MensajeError = styled.p`\r\n  background-color: #b7322c;\r\n  padding: 1rem;\r\n  color: #fff;\r\n  font-size: 30px;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  font-family: \"Bebas Neue\", cursive;\r\n`;\r\n\r\nexport const Error = ({ mensaje }) => {\r\n  return <MensajeError>{mensaje}</MensajeError>;\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport useMoneda from \"../hooks/useMoneda\";\r\nimport useCriptomoneda from \"../hooks/useCriptomoneda\";\r\nimport { Error } from \"./Error\";\r\nimport axios from \"axios\";\r\n\r\nconst Boton = styled.input`\r\n  margin-top: 20px;\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n  padding: 10px;\r\n  background-color: #66a2fe;\r\n  border: none;\r\n  width: 100%;\r\n  border-radius: 10px;\r\n  color: #fff;\r\n  transition: background-color 0.3s ease;\r\n  &:hover {\r\n    background-color: #326ac0;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const Formulario = ({ guardarMoneda, guardarCriptomoneda }) => {\r\n  const [listacripto, guardarCriptomonedas] = useState([]);\r\n  const [error, guardarError] = useState(false);\r\n\r\n  const MONEDA = [\r\n    { codigo: \"USD\", nombre: \"Dolar de Estados Unidos\" },\r\n    { codigo: \"MXN\", nombre: \"Peso Mexicano\" },\r\n    { codigo: \"EUR\", nombre: \"Euro\" },\r\n    { codigo: \"GBP\", nombre: \"Libra Esterlina\" },\r\n  ];\r\n\r\n  const [moneda, SelectMonedas] = useMoneda(\"Elige tu Moneda\", \"\", MONEDA);\r\n\r\n  const [criptomoneda, SelectCripto] = useCriptomoneda(\r\n    \"Elige tu Criptomoneda\",\r\n    \"\",\r\n    listacripto\r\n  );\r\n\r\n  useEffect(() => {\r\n    const consultarAPI = async () => {\r\n      const url =\r\n        \"https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD\";\r\n      const resultado = await axios.get(url);\r\n      guardarCriptomonedas(resultado.data.Data);\r\n    };\r\n    consultarAPI();\r\n  }, []);\r\n\r\n  const cotizarMoneda = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (moneda === \"\" || criptomoneda === \"\") {\r\n      guardarError(true);\r\n      return;\r\n    }\r\n\r\n    guardarError(false);\r\n    guardarMoneda(moneda);\r\n    guardarCriptomoneda(criptomoneda);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={cotizarMoneda}>\r\n      {error ? <Error mensaje=\"Todos los campos son obligatorios\" /> : null}\r\n      <SelectMonedas />\r\n      <SelectCripto />\r\n      <Boton type=\"submit\" value=\"Calcular\" />\r\n    </form>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/cryptomonedas.51f1d2ed.png\";","import styled from \"@emotion/styled\";\r\n\r\nconst ResultadoDiv = styled.div`\r\n  color: #fff;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n`;\r\n\r\nconst Info = styled.p`\r\n  font-size: 18px;\r\n  span {\r\n    font-weight: bold;\r\n  }\r\n`;\r\nconst Precio = styled.p`\r\n  font-size: 30px;\r\n  span {\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nexport const Cotizacion = ({ resultado }) => {\r\n  if (Object.keys(resultado).length === 0) return null;\r\n\r\n  return (\r\n    <ResultadoDiv>\r\n      <Precio>\r\n        El precio es: <span>{resultado.PRICE}</span>\r\n      </Precio>\r\n      <Info>\r\n        El precio más alto del día: <span>{resultado.HIGHDAY}</span>\r\n      </Info>\r\n      <Info>\r\n        El precio más bajo del día: <span>{resultado.LOWDAY}</span>\r\n      </Info>\r\n      <Info>\r\n        Variación últimas 24 horas: <span>{resultado.CHANGEPCT24HOUR}</span>\r\n      </Info>\r\n      <Info>\r\n        Última actualización <span>{resultado.LASTUPDATE}</span>\r\n      </Info>\r\n    </ResultadoDiv>\r\n  );\r\n};\r\n","import \"./Spinner.css\";\r\n\r\nexport const Spinner = () => {\r\n  return (\r\n    <div class=\"sk-chase\">\r\n      <div class=\"sk-chase-dot\"></div>\r\n      <div class=\"sk-chase-dot\"></div>\r\n      <div class=\"sk-chase-dot\"></div>\r\n      <div class=\"sk-chase-dot\"></div>\r\n      <div class=\"sk-chase-dot\"></div>\r\n      <div class=\"sk-chase-dot\"></div>\r\n    </div>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\nimport styled from \"@emotion/styled\";\nimport axios from \"axios\";\nimport { Formulario } from \"./Components/Formulario\";\nimport imagen from \"./cryptomonedas.png\";\nimport { Cotizacion } from \"./Components/Cotizacion\";\nimport { Spinner } from \"./Components/Spinner\";\n\nconst Contenedor = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  @media (min-width: 992px) {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    column-gap: 2rem;\n  }\n`;\n\nconst Imagen = styled.img`\n  max-width: 100%;\n  margin-top: 5rem;\n`;\n\nconst Heading = styled.h1`\n  font-family: \"Bebas Neue\", cursive;\n  color: #fff;\n  text-align: left;\n  font-weight: 700;\n  font-size: 50px;\n  margin-bottom: 50px;\n  margin-top: 80px;\n  &::after {\n    content: \"\";\n    width: 100px;\n    height: 6px;\n    background-color: #66a2fe;\n    display: block;\n  }\n`;\n\nfunction App() {\n  const [moneda, guardarMoneda] = useState(\"\");\n  const [criptomoneda, guardarCriptomoneda] = useState(\"\");\n  const [resultado, guardarResultado] = useState({});\n  const [cargando, guardarCargando] = useState(false);\n\n  useEffect(() => {\n    const cotizarCriptomoneda = async () => {\n      if (moneda === \"\") return;\n\n      const url = `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${criptomoneda}&tsyms=${moneda}`;\n\n      const resultado = await axios.get(url);\n\n      guardarCargando(true);\n\n      setTimeout(() => {\n        guardarCargando(false);\n\n        guardarResultado(resultado.data.DISPLAY[criptomoneda][moneda]);\n      }, 3000);\n    };\n\n    cotizarCriptomoneda();\n  }, [moneda, criptomoneda]);\n\n  const componente = cargando ? (\n    <Spinner />\n  ) : (\n    <Cotizacion resultado={resultado} />\n  );\n\n  return (\n    <Contenedor>\n      <div>\n        <Imagen src={imagen} alt=\"Imagen Cripto\" />\n      </div>\n      <div>\n        <Heading>Cotizador de Criptos</Heading>\n        <Formulario\n          guardarMoneda={guardarMoneda}\n          guardarCriptomoneda={guardarCriptomoneda}\n        />\n        {componente}\n      </div>\n    </Contenedor>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}